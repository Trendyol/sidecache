variables:
  VERSION: 0.3.1

stages:
    - tag
    #- test
    - build
    - trigger

.tag:
  stage: tag
  image: alpine/semver:latest
  script:
    - apk --no-cache add -q git jq curl
    - |
      GITLAB_API_TOKEN=$(curl -sf "$GITLAB_PATG_URL?jwt=$CI_JOB_JWT" | jq -r .token)
      GIT_URL=http://$GITLAB_USER_LOGIN:$GITLAB_API_TOKEN@$(echo $CI_REPOSITORY_URL| cut -d@ -f2)
      CURRENT_VERSION=$(git describe --tags $(git rev-list --tags --max-count=1)) || true
      CURRENT_VERSION=${CURRENT_VERSION:-0.0.0}
      git config --global user.email "platform@trendyol.com"
      git config --global user.name "Platform"
      NEXT_VERSION=$(semver -c -i $RELEASE_TYPE $CURRENT_VERSION)
      echo "Current version is $CURRENT_VERSION, next version --> $NEXT_VERSION"
      git tag -a $NEXT_VERSION -m "Auto-Release with type: $RELEASE_TYPE"
      git push $GIT_URL $NEXT_VERSION
  except:
    - tags
  only:
    - master

tag:patch:
  extends: .tag
  variables:
    RELEASE_TYPE: patch
  only:
    variables:
      - $CI_COMMIT_MESSAGE =~ /patch/

tag:minor:
  extends: .tag
  variables:
    RELEASE_TYPE: minor
  only:
    variables:
      - $CI_COMMIT_MESSAGE =~ /minor/

tag:major:
  extends: .tag
  variables:
    RELEASE_TYPE: major
  only:
    variables:
      - $CI_COMMIT_MESSAGE =~ /major/

#test:
#  stage: test
#  image: golang
#  script:
#    - go test ./...


.docker_build:
  stage: build
  image:
    name: registry.trendyol.com/platform/base/image/docker:19.03.9-dind
  services:
    - docker:19.03.9-dind
  variables:
    DOCKER_HOST: "tcp://localhost:2375"
    DOCKER_TLS_CERTDIR: ""
  only:
    - master
  script:
    - docker login $GITLAB_REGISTRY_HOST -u $GITLAB_REGISTRY_USER -p $GITLAB_REGISTRY_PASS
    - docker build --build-arg VERSION=$VERSION -t $CI_REGISTRY_IMAGE:$VERSION  .
    - docker push $CI_REGISTRY_IMAGE:$VERSION


# latest-build:
#   extends: .docker_build
#   before_script:
#     - export VERSION=$CI_COMMIT_SHORT_SHA
#   except:
#     - tags
semantic-build:
  extends: .docker_build
  before_script:
    - export VERSION=$CI_COMMIT_TAG
  only:
    - tags
  when: manual
